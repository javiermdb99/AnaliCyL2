# que ya están filtrados (votos_circ$CYL).
partidos_umbral <- votos_circ$CYL$Partido
escanos_partidos_noumbral <- frame_circ %>%
filter(!Partido %in% partidos_umbral) %>% select(!Partido) %>% sum()
escanos_repartir_comp <- sum(escanos_comp$Escanos) - escanos_partidos_noumbral
frame_circ$CYL <- obtener_reparto(votos_circ$CYL, anio, "CYL", method,
escanos_repartir_comp)$Escanos
frame_circ$CYL_fijos <- rowSums(frame_circ[,-c(1, 11)]) # se suman los escaños fijos para comparar
frame_circ <- frame_circ %>% group_by(Partido) %>%
mutate(CYL_final = max(CYL, CYL_fijos), COMP = CYL > CYL_fijos) %>%
ungroup()
npartidos_comp <- dim(frame_circ[frame_circ$COMP,])[1]
cocientes <-  votos_totales
for (i in 1:npartidos_comp){
partido <- as.character(frame_circ[frame_circ$COMP,][i,1])
votos <- c()
for (j in 1:9){ #posiciones en las provincias en la lista votos_totales
votos[j] <- votos_totales[[j]] %>% filter(Partido == partido) %>% pull(Votos)
}
browser()
for (j in 2:10){
prov <- colnames(frame_circ)[j]
esc_fijos <- frame_circ[frame_circ$COMP, ][i,j]
divisor <- if (method=="D'Hont") esc_fijos+1 else 2*esc_fijos+1
# frame_circ[frame_circ$COMP, ][i,] <-
}
}
# browser()
}
resultados_compensacion(datos, 2022, 3, 3, "D'Hont")
partido
frame_circ[frame_circ$COMP,][i,1]
as.character(frame_circ[frame_circ$COMP,][i,1])
frame_circ[frame_circ$COMP,][i,1] %>% pull
frame_circ[frame_circ$COMP,][i,1] %>% pull()
frame_circ[frame_circ$COMP,][i,1] %>% pull() %>% as.character()
votos
resultados_compensacion(datos, 2022, 3, 3, "D'Hont")
resultados_compensacion <- function(datos, anio, barrera_aut, barrera_prov, method){
#obtención de los votos
votos_circ <- list()
votos_totales <- list()
for (i in 1:9){
provincia <- provincias[i]
votos_totales[[i]] <- datos %>% filter(Provincia == provincia) %>%
select(Partido, Votos, Porc) %>% distinct()
votos_circ[[i]] <- votos_totales[[i]] %>% filter(Porc > barrera_prov)
}
votos_circ[[10]] <- datos %>% group_by(Partido) %>%
select(Partido, VotosCCAA, PorcCCAA) %>% distinct() %>% ungroup() %>%
filter(PorcCCAA > barrera_aut) %>% rename(Votos = VotosCCAA, Porc = PorcCCAA)
names(votos_totales) <- provincias[-10]
names(votos_circ) <- provincias
# asignación de escaños provincial (2 menos para VLL, BU, LE Y SA y 1 menos
# para el resto)
escanos_comp <- escanos %>% select(Provincia, as.character(anio)) %>%
rename(Escanos = as.character(anio))
escanos_maspobladas <-
escanos_comp %>% filter(Provincia %in% c("VALLADOLID",
"LEON",
"BURGOS",
"SALAMANCA")) %>%
mutate(Escanos = Escanos - 2)
escanos_menpobladas <-
escanos_comp %>% filter(!Provincia %in% c("VALLADOLID",
"LEON",
"BURGOS",
"SALAMANCA")) %>%
mutate(Escanos = Escanos - 1)
escanos_fijos <- bind_rows(escanos_maspobladas, escanos_menpobladas)
escanos_circ <- list()
for (i in 1:9){
provincia <-  provincias[i]
escanos_prov <- escanos_fijos %>% filter(Provincia == provincia) %>%
pull(Escanos)
escanos_circ[[i]] <- obtener_reparto(votos_circ[[i]], anio, provincia, method, escanos_prov)
}
frame_circ <- as.data.frame(escanos_circ)[,-seq(3, 2*length(escanos_circ), by=2)]
names(frame_circ) <- c("Partido", provincias[-10])
# cáclulo de escaños total
# se calcula el reparto con los escaños totales, pero se restan del cálculo
# final los diputados conseguidos por partidos que han caído por debajo del
# umbral autonómico
# primero se calculan los partidos, en el df anterior, que NO están en los votos totales
# que ya están filtrados (votos_circ$CYL).
partidos_umbral <- votos_circ$CYL$Partido
escanos_partidos_noumbral <- frame_circ %>%
filter(!Partido %in% partidos_umbral) %>% select(!Partido) %>% sum()
escanos_repartir_comp <- sum(escanos_comp$Escanos) - escanos_partidos_noumbral
frame_circ$CYL <- obtener_reparto(votos_circ$CYL, anio, "CYL", method,
escanos_repartir_comp)$Escanos
frame_circ$CYL_fijos <- rowSums(frame_circ[,-c(1, 11)]) # se suman los escaños fijos para comparar
frame_circ <- frame_circ %>% group_by(Partido) %>%
mutate(CYL_final = max(CYL, CYL_fijos), COMP = CYL > CYL_fijos) %>%
ungroup()
npartidos_comp <- dim(frame_circ[frame_circ$COMP,])[1]
cocientes <-  votos_totales
for (i in 1:npartidos_comp){
partido <- frame_circ[frame_circ$COMP,][i,1] %>% pull() %>% as.character()
votos <- c()
for (j in 1:9){ #posiciones en las provincias en la lista votos_totales
votos[j] <- votos_totales[[j]] %>% filter(Partido == partido) %>% pull(Votos)
}
browser()
for (j in 2:10){
prov <- colnames(frame_circ)[j]
esc_fijos <- frame_circ[frame_circ$COMP, ][i,j]
divisor <- if (method=="D'Hont") esc_fijos+1 else 2*esc_fijos+1
# frame_circ[frame_circ$COMP, ][i,] <-
}
}
# browser()
}
resultados_compensacion(datos, 2022, 3, 3, "D'Hont")
votos
resultados_compensacion <- function(datos, anio, barrera_aut, barrera_prov, method){
#obtención de los votos
votos_circ <- list()
votos_totales <- list()
for (i in 1:9){
provincia <- provincias[i]
votos_totales[[i]] <- datos %>% filter(Provincia == provincia) %>%
select(Partido, Votos, Porc) %>% distinct()
votos_circ[[i]] <- votos_totales[[i]] %>% filter(Porc > barrera_prov)
}
votos_circ[[10]] <- datos %>% group_by(Partido) %>%
select(Partido, VotosCCAA, PorcCCAA) %>% distinct() %>% ungroup() %>%
filter(PorcCCAA > barrera_aut) %>% rename(Votos = VotosCCAA, Porc = PorcCCAA)
names(votos_totales) <- provincias[-10]
names(votos_circ) <- provincias
# asignación de escaños provincial (2 menos para VLL, BU, LE Y SA y 1 menos
# para el resto)
escanos_comp <- escanos %>% select(Provincia, as.character(anio)) %>%
rename(Escanos = as.character(anio))
escanos_maspobladas <-
escanos_comp %>% filter(Provincia %in% c("VALLADOLID",
"LEON",
"BURGOS",
"SALAMANCA")) %>%
mutate(Escanos = Escanos - 2)
escanos_menpobladas <-
escanos_comp %>% filter(!Provincia %in% c("VALLADOLID",
"LEON",
"BURGOS",
"SALAMANCA")) %>%
mutate(Escanos = Escanos - 1)
escanos_fijos <- bind_rows(escanos_maspobladas, escanos_menpobladas)
escanos_circ <- list()
for (i in 1:9){
provincia <-  provincias[i]
escanos_prov <- escanos_fijos %>% filter(Provincia == provincia) %>%
pull(Escanos)
escanos_circ[[i]] <- obtener_reparto(votos_circ[[i]], anio, provincia, method, escanos_prov)
}
frame_circ <- as.data.frame(escanos_circ)[,-seq(3, 2*length(escanos_circ), by=2)]
names(frame_circ) <- c("Partido", provincias[-10])
# cáclulo de escaños total
# se calcula el reparto con los escaños totales, pero se restan del cálculo
# final los diputados conseguidos por partidos que han caído por debajo del
# umbral autonómico
# primero se calculan los partidos, en el df anterior, que NO están en los votos totales
# que ya están filtrados (votos_circ$CYL).
partidos_umbral <- votos_circ$CYL$Partido
escanos_partidos_noumbral <- frame_circ %>%
filter(!Partido %in% partidos_umbral) %>% select(!Partido) %>% sum()
escanos_repartir_comp <- sum(escanos_comp$Escanos) - escanos_partidos_noumbral
frame_circ$CYL <- obtener_reparto(votos_circ$CYL, anio, "CYL", method,
escanos_repartir_comp)$Escanos
frame_circ$CYL_fijos <- rowSums(frame_circ[,-c(1, 11)]) # se suman los escaños fijos para comparar
frame_circ <- frame_circ %>% group_by(Partido) %>%
mutate(CYL_final = max(CYL, CYL_fijos), COMP = CYL > CYL_fijos) %>%
ungroup()
npartidos_comp <- dim(frame_circ[frame_circ$COMP,])[1]
for (i in 1:npartidos_comp){
partido <- frame_circ[frame_circ$COMP,][i,1] %>% pull() %>% as.character()
cocientes <- c()
for (j in 1:9){ #posiciones en las provincias en la lista votos_totales
cocientes[j] <- votos_totales[[j]] %>% filter(Partido == partido) %>% pull(Votos)
esc_fijos <- frame_circ[frame_circ$COMP, ][i,j+1]
divisor <- if (method=="D'Hont") esc_fijos+1 else 2*esc_fijos+1
cocientes[j] <- cocientes[j]/divisor
}
browser()
for (j in 2:10){
prov <- colnames(frame_circ)[j]
# frame_circ[frame_circ$COMP, ][i,] <-
}
}
# browser()
}
resultados_compensacion(datos, 2022, 3, 3, "D'Hont")
cocientes
resultados_compensacion <- function(datos, anio, barrera_aut, barrera_prov, method){
#obtención de los votos
votos_circ <- list()
votos_totales <- list()
for (i in 1:9){
provincia <- provincias[i]
votos_totales[[i]] <- datos %>% filter(Provincia == provincia) %>%
select(Partido, Votos, Porc) %>% distinct()
votos_circ[[i]] <- votos_totales[[i]] %>% filter(Porc > barrera_prov)
}
votos_circ[[10]] <- datos %>% group_by(Partido) %>%
select(Partido, VotosCCAA, PorcCCAA) %>% distinct() %>% ungroup() %>%
filter(PorcCCAA > barrera_aut) %>% rename(Votos = VotosCCAA, Porc = PorcCCAA)
names(votos_totales) <- provincias[-10]
names(votos_circ) <- provincias
# asignación de escaños provincial (2 menos para VLL, BU, LE Y SA y 1 menos
# para el resto)
escanos_comp <- escanos %>% select(Provincia, as.character(anio)) %>%
rename(Escanos = as.character(anio))
escanos_maspobladas <-
escanos_comp %>% filter(Provincia %in% c("VALLADOLID",
"LEON",
"BURGOS",
"SALAMANCA")) %>%
mutate(Escanos = Escanos - 2)
escanos_menpobladas <-
escanos_comp %>% filter(!Provincia %in% c("VALLADOLID",
"LEON",
"BURGOS",
"SALAMANCA")) %>%
mutate(Escanos = Escanos - 1)
escanos_fijos <- bind_rows(escanos_maspobladas, escanos_menpobladas)
escanos_circ <- list()
for (i in 1:9){
provincia <-  provincias[i]
escanos_prov <- escanos_fijos %>% filter(Provincia == provincia) %>%
pull(Escanos)
escanos_circ[[i]] <- obtener_reparto(votos_circ[[i]], anio, provincia, method, escanos_prov)
}
frame_circ <- as.data.frame(escanos_circ)[,-seq(3, 2*length(escanos_circ), by=2)]
names(frame_circ) <- c("Partido", provincias[-10])
# cáclulo de escaños total
# se calcula el reparto con los escaños totales, pero se restan del cálculo
# final los diputados conseguidos por partidos que han caído por debajo del
# umbral autonómico
# primero se calculan los partidos, en el df anterior, que NO están en los votos totales
# que ya están filtrados (votos_circ$CYL).
partidos_umbral <- votos_circ$CYL$Partido
escanos_partidos_noumbral <- frame_circ %>%
filter(!Partido %in% partidos_umbral) %>% select(!Partido) %>% sum()
escanos_repartir_comp <- sum(escanos_comp$Escanos) - escanos_partidos_noumbral
frame_circ$CYL <- obtener_reparto(votos_circ$CYL, anio, "CYL", method,
escanos_repartir_comp)$Escanos
frame_circ$CYL_fijos <- rowSums(frame_circ[,-c(1, 11)]) # se suman los escaños fijos para comparar
frame_circ <- frame_circ %>% group_by(Partido) %>%
mutate(CYL_final = max(CYL, CYL_fijos), COMP = CYL > CYL_fijos) %>%
ungroup()
npartidos_comp <- dim(frame_circ[frame_circ$COMP,])[1]
for (i in 1:npartidos_comp){
partido <- frame_circ[frame_circ$COMP,][i,1] %>% pull() %>% as.character()
cocientes <- c()
for (j in 1:9){ #posiciones en las provincias en la lista votos_totales
cocientes[j] <- votos_totales[[j]] %>% filter(Partido == partido) %>% pull(Votos)
esc_fijos <- frame_circ[frame_circ$COMP, ][i,j+1] %>% pull()
divisor <- if (method=="D'Hont") esc_fijos+1 else 2*esc_fijos+1
cocientes[j] <- cocientes[j]/divisor
}
browser()
for (j in 2:10){
prov <- colnames(frame_circ)[j]
# frame_circ[frame_circ$COMP, ][i,] <-
}
}
# browser()
}
resultados_compensacion(datos, 2022, 3, 3, "D'Hont")
cocientes
resultados_compensacion <- function(datos, anio, barrera_aut, barrera_prov, method){
#obtención de los votos
votos_circ <- list()
votos_totales <- list()
for (i in 1:9){
provincia <- provincias[i]
votos_totales[[i]] <- datos %>% filter(Provincia == provincia) %>%
select(Partido, Votos, Porc) %>% distinct()
votos_circ[[i]] <- votos_totales[[i]] %>% filter(Porc > barrera_prov)
}
votos_circ[[10]] <- datos %>% group_by(Partido) %>%
select(Partido, VotosCCAA, PorcCCAA) %>% distinct() %>% ungroup() %>%
filter(PorcCCAA > barrera_aut) %>% rename(Votos = VotosCCAA, Porc = PorcCCAA)
names(votos_totales) <- provincias[-10]
names(votos_circ) <- provincias
# asignación de escaños provincial (2 menos para VLL, BU, LE Y SA y 1 menos
# para el resto)
escanos_comp <- escanos %>% select(Provincia, as.character(anio)) %>%
rename(Escanos = as.character(anio))
escanos_maspobladas <-
escanos_comp %>% filter(Provincia %in% c("VALLADOLID",
"LEON",
"BURGOS",
"SALAMANCA")) %>%
mutate(Escanos = Escanos - 2)
escanos_menpobladas <-
escanos_comp %>% filter(!Provincia %in% c("VALLADOLID",
"LEON",
"BURGOS",
"SALAMANCA")) %>%
mutate(Escanos = Escanos - 1)
escanos_fijos <- bind_rows(escanos_maspobladas, escanos_menpobladas)
escanos_circ <- list()
for (i in 1:9){
provincia <-  provincias[i]
escanos_prov <- escanos_fijos %>% filter(Provincia == provincia) %>%
pull(Escanos)
escanos_circ[[i]] <- obtener_reparto(votos_circ[[i]], anio, provincia, method, escanos_prov)
}
frame_circ <- as.data.frame(escanos_circ)[,-seq(3, 2*length(escanos_circ), by=2)]
names(frame_circ) <- c("Partido", provincias[-10])
# cáclulo de escaños total
# se calcula el reparto con los escaños totales, pero se restan del cálculo
# final los diputados conseguidos por partidos que han caído por debajo del
# umbral autonómico
# primero se calculan los partidos, en el df anterior, que NO están en los votos totales
# que ya están filtrados (votos_circ$CYL).
partidos_umbral <- votos_circ$CYL$Partido
escanos_partidos_noumbral <- frame_circ %>%
filter(!Partido %in% partidos_umbral) %>% select(!Partido) %>% sum()
escanos_repartir_comp <- sum(escanos_comp$Escanos) - escanos_partidos_noumbral
frame_circ$CYL <- obtener_reparto(votos_circ$CYL, anio, "CYL", method,
escanos_repartir_comp)$Escanos
frame_circ$CYL_fijos <- rowSums(frame_circ[,-c(1, 11)]) # se suman los escaños fijos para comparar
frame_circ <- frame_circ %>% group_by(Partido) %>%
mutate(CYL_final = max(CYL, CYL_fijos), COMP = CYL > CYL_fijos) %>%
ungroup()
npartidos_comp <- dim(frame_circ[frame_circ$COMP,])[1]
for (i in 1:npartidos_comp){
partido <- frame_circ[frame_circ$COMP,][i,1] %>% pull() %>% as.character()
cocientes <- c()
for (j in 1:9){ #posiciones en las provincias en la lista votos_totales
# los pull son para transformar a enteros
cocientes[j] <- votos_totales[[j]] %>% filter(Partido == partido) %>% pull(Votos)
esc_fijos <- frame_circ[frame_circ$COMP, ][i,j+1] %>% pull()
divisor <- if (method=="D'Hont") esc_fijos+1 else 2*esc_fijos+1
cocientes[j] <- cocientes[j]/divisor
}
browser()
for (j in 2:10){
# prov <- colnames(frame_circ)[j]
# frame_circ[frame_circ$COMP, ][i,] <-
}
}
# browser()
}
resultados_compensacion(datos, 2022, 3, 3, "D'Hont")
which.max(cocientes)
frame_circ[frame_circ$COMP,]$CYL - frame_circ[frame_circ$COMP,]$CYL_fijos
frame_circ[frame_circ$COMP,][i,]$CYL - frame_circ[frame_circ$COMP,][i,]$CYL_fijos
resultados_compensacion <- function(datos, anio, barrera_aut, barrera_prov, method){
#obtención de los votos
votos_circ <- list()
votos_totales <- list()
for (i in 1:9){
provincia <- provincias[i]
votos_totales[[i]] <- datos %>% filter(Provincia == provincia) %>%
select(Partido, Votos, Porc) %>% distinct()
votos_circ[[i]] <- votos_totales[[i]] %>% filter(Porc > barrera_prov)
}
votos_circ[[10]] <- datos %>% group_by(Partido) %>%
select(Partido, VotosCCAA, PorcCCAA) %>% distinct() %>% ungroup() %>%
filter(PorcCCAA > barrera_aut) %>% rename(Votos = VotosCCAA, Porc = PorcCCAA)
names(votos_totales) <- provincias[-10]
names(votos_circ) <- provincias
# asignación de escaños provincial (2 menos para VLL, BU, LE Y SA y 1 menos
# para el resto)
escanos_comp <- escanos %>% select(Provincia, as.character(anio)) %>%
rename(Escanos = as.character(anio))
escanos_maspobladas <-
escanos_comp %>% filter(Provincia %in% c("VALLADOLID",
"LEON",
"BURGOS",
"SALAMANCA")) %>%
mutate(Escanos = Escanos - 2)
escanos_menpobladas <-
escanos_comp %>% filter(!Provincia %in% c("VALLADOLID",
"LEON",
"BURGOS",
"SALAMANCA")) %>%
mutate(Escanos = Escanos - 1)
escanos_fijos <- bind_rows(escanos_maspobladas, escanos_menpobladas)
escanos_circ <- list()
for (i in 1:9){
provincia <-  provincias[i]
escanos_prov <- escanos_fijos %>% filter(Provincia == provincia) %>%
pull(Escanos)
escanos_circ[[i]] <- obtener_reparto(votos_circ[[i]], anio, provincia, method, escanos_prov)
}
frame_circ <- as.data.frame(escanos_circ)[,-seq(3, 2*length(escanos_circ), by=2)]
names(frame_circ) <- c("Partido", provincias[-10])
# cáclulo de escaños total
# se calcula el reparto con los escaños totales, pero se restan del cálculo
# final los diputados conseguidos por partidos que han caído por debajo del
# umbral autonómico
# primero se calculan los partidos, en el df anterior, que NO están en los votos totales
# que ya están filtrados (votos_circ$CYL).
partidos_umbral <- votos_circ$CYL$Partido
escanos_partidos_noumbral <- frame_circ %>%
filter(!Partido %in% partidos_umbral) %>% select(!Partido) %>% sum()
escanos_repartir_comp <- sum(escanos_comp$Escanos) - escanos_partidos_noumbral
frame_circ$CYL <- obtener_reparto(votos_circ$CYL, anio, "CYL", method,
escanos_repartir_comp)$Escanos
frame_circ$CYL_fijos <- rowSums(frame_circ[,-c(1, 11)]) # se suman los escaños fijos para comparar
frame_circ <- frame_circ %>% group_by(Partido) %>%
mutate(CYL_final = max(CYL, CYL_fijos), COMP = CYL > CYL_fijos) %>%
ungroup()
npartidos_comp <- dim(frame_circ[frame_circ$COMP,])[1]
for (i in 1:npartidos_comp){
partido <- frame_circ[frame_circ$COMP,][i,1] %>% pull() %>% as.character()
cocientes <- c()
dif_esc <- frame_circ[frame_circ$COMP,][i,]$CYL - frame_circ[frame_circ$COMP,][i,]$CYL_fijos
for (j in 1:9){ #posiciones en las provincias en la lista votos_totales
# los pull son para transformar a enteros
cocientes[j] <- votos_totales[[j]] %>% filter(Partido == partido) %>% pull(Votos)
esc_fijos <- frame_circ[frame_circ$COMP, ][i,j+1] %>% pull()
divisor <- if (method=="D'Hont") esc_fijos+1 else 2*esc_fijos+1
cocientes[j] <- cocientes[j]/divisor
}
for (j in 1:dif_esc){
max_cociente <- which.max(cocientes)
browser()
frame_circ[frame_circ$COMP, ][i, max_cociente+1] <-
(frame_circ[frame_circ$COMP, ][i, max_cociente+1] %>% pull()) + 1
}
}
# browser()
}
resultados_compensacion(datos, 2022, 3, 3, "D'Hont")
max_cociente
frame_circ[frame_circ$COMP, ][i, max_cociente+1] %>% pull()
(frame_circ[frame_circ$COMP, ][i, max_cociente+1] %>% pull()) + 1
resultados_compensacion <- function(datos, anio, barrera_aut, barrera_prov, method){
#obtención de los votos
votos_circ <- list()
votos_totales <- list()
for (i in 1:9){
provincia <- provincias[i]
votos_totales[[i]] <- datos %>% filter(Provincia == provincia) %>%
select(Partido, Votos, Porc) %>% distinct()
votos_circ[[i]] <- votos_totales[[i]] %>% filter(Porc > barrera_prov)
}
votos_circ[[10]] <- datos %>% group_by(Partido) %>%
select(Partido, VotosCCAA, PorcCCAA) %>% distinct() %>% ungroup() %>%
filter(PorcCCAA > barrera_aut) %>% rename(Votos = VotosCCAA, Porc = PorcCCAA)
names(votos_totales) <- provincias[-10]
names(votos_circ) <- provincias
# asignación de escaños provincial (2 menos para VLL, BU, LE Y SA y 1 menos
# para el resto)
escanos_comp <- escanos %>% select(Provincia, as.character(anio)) %>%
rename(Escanos = as.character(anio))
escanos_maspobladas <-
escanos_comp %>% filter(Provincia %in% c("VALLADOLID",
"LEON",
"BURGOS",
"SALAMANCA")) %>%
mutate(Escanos = Escanos - 2)
escanos_menpobladas <-
escanos_comp %>% filter(!Provincia %in% c("VALLADOLID",
"LEON",
"BURGOS",
"SALAMANCA")) %>%
mutate(Escanos = Escanos - 1)
escanos_fijos <- bind_rows(escanos_maspobladas, escanos_menpobladas)
escanos_circ <- list()
for (i in 1:9){
provincia <-  provincias[i]
escanos_prov <- escanos_fijos %>% filter(Provincia == provincia) %>%
pull(Escanos)
escanos_circ[[i]] <- obtener_reparto(votos_circ[[i]], anio, provincia, method, escanos_prov)
}
frame_circ <- as.data.frame(escanos_circ)[,-seq(3, 2*length(escanos_circ), by=2)]
names(frame_circ) <- c("Partido", provincias[-10])
# cáclulo de escaños total
# se calcula el reparto con los escaños totales, pero se restan del cálculo
# final los diputados conseguidos por partidos que han caído por debajo del
# umbral autonómico
# primero se calculan los partidos, en el df anterior, que NO están en los votos totales
# que ya están filtrados (votos_circ$CYL).
partidos_umbral <- votos_circ$CYL$Partido
escanos_partidos_noumbral <- frame_circ %>%
filter(!Partido %in% partidos_umbral) %>% select(!Partido) %>% sum()
escanos_repartir_comp <- sum(escanos_comp$Escanos) - escanos_partidos_noumbral
frame_circ$CYL <- obtener_reparto(votos_circ$CYL, anio, "CYL", method,
escanos_repartir_comp)$Escanos
frame_circ$CYL_fijos <- rowSums(frame_circ[,-c(1, 11)]) # se suman los escaños fijos para comparar
frame_circ <- frame_circ %>% group_by(Partido) %>%
mutate(CYL_final = max(CYL, CYL_fijos), COMP = CYL > CYL_fijos) %>%
ungroup()
npartidos_comp <- dim(frame_circ[frame_circ$COMP,])[1]
for (i in 1:npartidos_comp){
partido <- frame_circ[frame_circ$COMP,][i,1] %>% pull() %>% as.character()
cocientes <- c()
dif_esc <- frame_circ[frame_circ$COMP,][i,]$CYL - frame_circ[frame_circ$COMP,][i,]$CYL_fijos
for (j in 1:9){ #posiciones en las provincias en la lista votos_totales
# los pull son para transformar a enteros
cocientes[j] <- votos_totales[[j]] %>% filter(Partido == partido) %>% pull(Votos)
esc_fijos <- frame_circ[frame_circ$COMP, ][i,j+1] %>% pull()
divisor <- if (method=="D'Hont") esc_fijos+1 else 2*esc_fijos+1
cocientes[j] <- cocientes[j]/divisor
}
for (j in 1:dif_esc){
max_cociente <- which.max(cocientes)
frame_circ[frame_circ$COMP, ][i, max_cociente+1] <-
(frame_circ[frame_circ$COMP, ][i, max_cociente+1] %>% pull()) + 1
esc_fijos <- frame_circ[frame_circ$COMP, ][i, max_cociente+1] %>% pull()
divisor <- if (method=="D'Hont") esc_fijos+1 else 2*esc_fijos+1
cocientes[max_cociente] <- cocientes[max_cociente]/divisor
}
}
browser()
}
resultados_compensacion(datos, 2022, 3, 3, "D'Hont")
